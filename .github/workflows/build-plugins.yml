name: Build VST3 Plugins

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  cache-vst3-sdk:
    runs-on: ubuntu-latest
    outputs:
      vst3_sdk_cached: ${{ steps.cache-sdk.outputs.cache-hit }}
    steps:
      - name: Cache VST3 SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Dependencies/VST3_SDK
          key: vst3-sdk-${{ runner.os }}-v1-${{ hashFiles('**/VST3_SDK/**') }}
          restore-keys: |
            vst3-sdk-${{ runner.os }}-v1-

      - name: Download VST3 SDK
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          echo "Downloading VST3 SDK..."
          curl -L -o vst3sdk.zip https://www.steinberg.net/vst3sdk
          mkdir -p ${{ github.workspace }}/Dependencies/VST3_SDK
          unzip vst3sdk.zip -d ${{ github.workspace }}/Dependencies/VST3_SDK
          echo "VST3 SDK downloaded and extracted successfully."
        shell: bash

  generate-matrix:
    needs: cache-vst3-sdk
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate plugin matrix from .sln files
        id: set-matrix
        run: |
          plugins=$(find Examples -maxdepth 2 -mindepth 2 -type f -name "*.sln" | awk -F/ '{ if ($(NF) == $(NF-1) ".sln") print "\""$(NF-1)"\"" }' | paste -sd "," -)
          if [ -z "$plugins" ]; then
            echo "No valid .sln files found."
            exit 1
          fi
          matrix="{\"plugin\":[${plugins}]}"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    needs: [cache-vst3-sdk, generate-matrix]
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        plugin: ${{ fromJson(needs.generate-matrix.outputs.matrix).plugin }}

    name: Build VST3 Plugin ${{ matrix.plugin }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Set VST3 SDK environment variable
        run: |
          echo "VST3_SDK_PATH=${{ github.workspace }}\\Dependencies\\VST3_SDK" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Show VST3_SDK_PATH
        run: |
          echo "VST3_SDK_PATH is: $env:VST3_SDK_PATH"
        shell: pwsh

      - name: List contents of VST3 SDK directory
        run: |
          if (Test-Path $env:VST3_SDK_PATH) {
            echo "Contents of VST3 SDK:"
            Get-ChildItem -Recurse -Path $env:VST3_SDK_PATH
          } else {
            echo "VST3 SDK directory not found at path: $env:VST3_SDK_PATH"
            exit 1
          }
        shell: pwsh

      - name: Restore NuGet packages
        run: |
          nuget restore Examples/${{ matrix.plugin }}/${{ matrix.plugin }}.sln

      - name: Build VST3 plugin (${{ matrix.plugin }})
        run: |
          cd Examples/${{ matrix.plugin }}/projects
          $projName = "${{ matrix.plugin }}-vst3.vcxproj"
          if (Test-Path $projName) {
            echo "Found the .vcxproj file: $projName"
            msbuild $projName /p:Configuration=Release /p:Platform=x64 /p:TargetName=VST3 /p:SolutionDir="${{ github.workspace }}\Examples\${{ matrix.plugin }}\"
          } else {
            echo "Error: .vcxproj file not found: $projName"
            exit 1
          }
        shell: pwsh

      - name: Upload VST3 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.plugin }}-vst3
          path: |
            **/*.vst3
